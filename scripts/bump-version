#!/bin/bash
#
# Script to create a version bump commit.
#
# Increases the version
#
# Semantic Versioning: MAJOR.MINOR.PATCH

. scripts/inc.functions

if [ $# -ne 1 ] ; then
    die "Usage: $0 [VERSION_NAME]\n\n\tExample: $0 0.0.1"
fi

MOBILE_GRADLE="mobile/build.gradle"
WEAR_GRADLE="wear/build.gradle"

# Increase version name
OLD_VERSION_NAME=$(get_version_name ${MOBILE_GRADLE})
NEW_VERSION_NAME=$1
if version_gt $OLD_VERSION_NAME $NEW_VERSION_NAME; then
    die "Error: We are already at version $OLD_VERSION_NAME"
fi
sed -i -e "s|versionName '$OLD_VERSION_NAME|versionName '$NEW_VERSION_NAME|" \
    ${MOBILE_GRADLE} ${WEAR_GRADLE}

# Bump mobile app version code for Google's Play Store
OLD_VERSION_CODE=$(get_version_code ${MOBILE_GRADLE})
NEW_VERSION_CODE=$(($OLD_VERSION_CODE+1))
sed -i -e "s/versionCode $OLD_VERSION_CODE/versionCode $NEW_VERSION_CODE/" \
    ${MOBILE_GRADLE}

# Bump standalone wear app version code for Google's Play Store
OLD_VERSION_CODE=$(get_version_code ${WEAR_GRADLE})
NEW_VERSION_CODE=$(($OLD_VERSION_CODE+1))
sed -i -e "s/versionCode $OLD_VERSION_CODE/versionCode $NEW_VERSION_CODE/" \
     ${WEAR_GRADLE}

# Create a commit with appropriate tag
git commit \
    ${MOBILE_GRADLE} \
    ${WEAR_GRADLE} \
    -m "Bump to version $NEW_VERSION_NAME"
git tag release/${NEW_VERSION_NAME}
